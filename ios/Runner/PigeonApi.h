// Autogenerated from Pigeon (v25.3.1), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

@class NativeBean;
@class FlutterBean;

/// 原生数据
@interface NativeBean : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithId:(NSInteger )id
    name:(NSString *)name;
@property(nonatomic, assign) NSInteger  id;
@property(nonatomic, copy) NSString * name;
@end

/// Flutter数据
@interface FlutterBean : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithFId:(NSInteger )fId
    fName:(NSString *)fName;
@property(nonatomic, assign) NSInteger  fId;
@property(nonatomic, copy) NSString * fName;
@end

/// The codec used by all APIs.
NSObject<FlutterMessageCodec> *nullGetPigeonApiCodec(void);

/// 重点关心这两个抽象类
@protocol FlutterToNative
/// @return `nil` only when `error != nil`.
- (nullable NativeBean *)loadNativeInfoId:(NSInteger)id error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void SetUpFlutterToNative(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FlutterToNative> *_Nullable api);

extern void SetUpFlutterToNativeWithSuffix(id<FlutterBinaryMessenger> binaryMessenger, NSObject<FlutterToNative> *_Nullable api, NSString *messageChannelSuffix);


@interface NativeToFlutter : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger messageChannelSuffix:(nullable NSString *)messageChannelSuffix;
- (void)getFlutterInfoId:(NSInteger)id completion:(void (^)(FlutterBean *_Nullable, FlutterError *_Nullable))completion;
@end

NS_ASSUME_NONNULL_END
